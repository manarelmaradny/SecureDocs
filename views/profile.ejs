<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Profile | SecureDocs</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Rajdhani:wght@500;700&family=Space+Mono:wght@400;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    * { margin: 0; padding: 0; box-sizing: border-box; font-family: 'Space Mono', monospace; }
    body {
      background: radial-gradient(circle at 20% 30%, rgba(10, 25, 47, 0.9), rgba(5, 15, 35, 0.95)),
                  linear-gradient(135deg, #0a192f, #112240);
      color: #e6f1ff;
      overflow-x: hidden;
    }
    .cyber-grid, .binary-rain, .cyber-circle {
      position: fixed;
      top: 0; left: 0;
      width: 100%; height: 100%;
      z-index: 1;
      pointer-events: none;
    }
    .cyber-grid {
      background-image: linear-gradient(rgba(255, 85, 85, 0.05) 1px, transparent 1px),
                        linear-gradient(90deg, rgba(255, 85, 85, 0.05) 1px, transparent 1px);
      background-size: 40px 40px;
      opacity: 0.5;
    }
    .binary-rain { opacity: 0.1; overflow: hidden; }
    .binary-digit {
      position: absolute;
      color: #50fa7b;
      font-size: 1rem;
      animation: fall 5s linear infinite;
    }
    @keyframes fall {
      0% { transform: translateY(-100%); }
      100% { transform: translateY(100vh); }
    }
    .cyber-circle {
      border: 2px dashed rgba(255, 85, 85, 0.3);
      border-radius: 50%;
    }
    .circle-1 { width: 300px; height: 300px; top: -150px; right: -150px; animation: rotate 40s linear infinite; }
    .circle-2 { width: 500px; height: 500px; bottom: -250px; left: -250px; animation: rotate 60s linear infinite reverse; }
    @keyframes rotate {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    .navbar {
      background: rgba(10, 25, 47, 0.95);
      border-bottom: 1px solid rgba(255, 85, 85, 0.3);
      padding: 15px 30px;
      position: fixed;
      top: 0;
      width: 100%;
      z-index: 10;
    }
    .navbar-brand {
      font-family: 'Rajdhani', sans-serif;
      font-size: 1.8rem;
      font-weight: 700;
      color: #ff5555 !important;
      text-transform: uppercase;
      text-shadow: 0 0 8px rgba(255, 85, 85, 0.4);
    }
    .nav-link {
      color: #e6f1ff !important;
      font-size: 1rem;
      padding: 8px 15px;
      transition: color 0.3s ease;
    }
    .nav-link:hover {
      color: #ff5555 !important;
      text-shadow: 0 0 8px rgba(255, 85, 85, 0.4);
    }

    .profile-container {
      position: relative;
      z-index: 2;
      max-width: 900px;
      background: rgba(10, 25, 47, 0.85);
      border-radius: 8px;
      box-shadow: 0 0 30px rgba(255, 85, 85, 0.2);
      padding: 40px;
      border: 1px solid rgba(255, 85, 85, 0.2);
      backdrop-filter: blur(5px);
      margin: 120px auto 50px;
    }
    h2 {
      font-family: 'Rajdhani', sans-serif;
      color: #ff5555;
      font-size: 2.2rem;
      font-weight: 700;
      text-align: center;
      margin-bottom: 20px;
      letter-spacing: 2px;
      text-shadow: 0 0 15px rgba(255, 85, 85, 0.5);
    }
    .user-info {
      display: flex;
      align-items: center;
      gap: 20px;
      margin-bottom: 30px;
    }
    .avatar {
      width: 100px;
      height: 100px;
      border-radius: 50%;
      object-fit: cover;
      border: 2px solid rgba(255, 85, 85, 0.3);
      box-shadow: 0 0 10px rgba(255, 85, 85, 0.2);
    }
    .user-details p {
      margin: 5px 0;
    }
    .user-details span {
      color: #8be9fd;
      font-weight: 600;
    }
    input[type="text"], input[type="email"] {
      background: rgba(10, 25, 47, 0.6);
      border: 1px solid rgba(255, 85, 85, 0.3);
      color: #e6f1ff;
      border-radius: 4px;
      padding: 5px 10px;
    }
    .edit-btn {
      background: #ff5555;
      border: none;
      color: white;
      padding: 5px 10px;
      margin-left: 10px;
      border-radius: 4px;
      cursor: pointer;
    }
    .save-btn {
      display: block;
      margin: 20px auto 0;
      padding: 10px 20px;
      background: #50fa7b;
      color: #000;
      font-weight: bold;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }
    .activity-table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 30px;
    }
    .activity-table th, .activity-table td {
      padding: 12px;
      border: 1px solid rgba(255, 85, 85, 0.4);
      text-align: left;
      background: rgba(10, 25, 47, 0.9);
    }
    .activity-table th {
      background: rgba(255, 85, 85, 0.3);
      font-family: 'Rajdhani', sans-serif;
      font-weight: 700;
      text-transform: uppercase;
    }
  </style>
</head>
<body>
  <div class="cyber-grid"></div>
  <div class="binary-rain" id="binaryRain"></div>
  <div class="cyber-circle circle-1"></div>
  <div class="cyber-circle circle-2"></div>

  <nav class="navbar navbar-expand-lg">
    <a class="navbar-brand" href="#">SecureDocs</a>
    <div class="ms-auto">
      <a class="nav-link d-inline" href="/dashboard">Dashboard</a>
      <a class="nav-link d-inline" href="/logout">Logout</a>
    </div>
  </nav>

  <div class="profile-container">
    <h2>Welcome, <%= name %>!</h2>
    <div class="user-info">
      <img src="<%= avatar %>" class="avatar" alt="Avatar">
      <div class="user-details">
        <p><strong>Role:</strong> <span><%= role %></span></p>

        <form method="POST" action="/profile/update">
          <p>
            <strong>Name:</strong>
            <span id="nameText"><%= name %></span>
            <input type="text" name="name" id="nameInput" value="<%= name %>" style="display: none;">
            <button type="button" class="edit-btn" onclick="toggleEdit('name')">Edit</button>
          </p>
          <p>
            <strong>Email:</strong>
            <span id="emailText"><%= email %></span>
            <input type="email" name="email" id="emailInput" value="<%= email %>" style="display: none;">
            <button type="button" class="edit-btn" onclick="toggleEdit('email')">Edit</button>
          </p>
          <button type="submit" id="saveBtn" class="save-btn" style="display: none;">Save Changes</button>
        </form>
      </div>
    </div>

    <h3>Recent Activity</h3>
    <table class="activity-table">
      <thead>
        <tr><th>Action</th><th>Date</th></tr>
      </thead>
      <tbody>
        <% if (activities && activities.length > 0) { %>
          <% activities.forEach(function(activity) { %>
            <tr>
              <td><%= activity.action %></td>
              <td><%= new Date(activity.timestamp).toLocaleString() %></td>
            </tr>
          <% }); %>
        <% } else { %>
          <tr><td colspan="2">No recent activity available.</td></tr>
        <% } %>
      </tbody>
    </table>
  </div>

  <script>
    function toggleEdit(field) {
      document.getElementById(field + 'Text').style.display = 'none';
      document.getElementById(field + 'Input').style.display = 'inline-block';
      document.getElementById('saveBtn').style.display = 'block';
    }

    // Binary rain animation
    const binary = document.getElementById("binaryRain");
    for (let i = 0; i < 100; i++) {
      const digit = document.createElement("div");
      digit.classList.add("binary-digit");
      digit.style.left = Math.random() * 100 + "vw";
      digit.style.top = Math.random() * -100 + "vh";
      digit.style.animationDuration = Math.random() * 3 + 3 + "s";
      digit.innerText = Math.round(Math.random());
      binary.appendChild(digit);
    }
  </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Binary rain effect
    const binaryRain = document.getElementById('binaryRain');
    for (let i = 0; i < 30; i++) {
      const digit = document.createElement('div');
      digit.className = 'binary-digit';
      digit.textContent = Math.random() > 0.5 ? '1' : '0';
      digit.style.left = `${Math.random() * 100}%`;
      digit.style.animationDuration = `${8 + Math.random() * 12}s`;
      digit.style.animationDelay = `${Math.random() * 5}s`;
      binaryRain.appendChild(digit);
    }
  </script>
</body>
</html>
